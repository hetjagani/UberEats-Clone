type Media {
  _id: String
  url: String
  alt_text: String
}

type RestaurantPage {
  total: Int!
  nodes: [Restaurant]!
}

type DishPage {
  total: Int!
  nodes: [Dish]!
}

type OrderPage {
  total: Int!
  nodes: [Order]!
}

type Restaurant {
  _id: String!
  name: String
  description: String
  address: String
  city: String
  state: String
  country: String
  contact_no: String
  food_type: String
  restaurant_type: String
  time_open: String
  time_close: String
  media: [Media]
  dishes: [Dish]
}

type Dish {
  _id: String!
  name: String
  description: String
  price: Float
  food_type: String
  category: String
  restaurantId: String
  media: [Media]
}

type Customer {
  _id: String!
  name: String
  nickname: String
  about: String
  city: String
  state: String
  country: String
  contact_no: String
  medium: Media
  favourites: [Favourite]
}

type Favourite {
  restaurantId: String
  restaurant: Restaurant
}

type Address {
  _id: String
  firstLine: String
  secondLine: String
  zipcode: String
  city: String
  state: String
  country: String
  customerId: String
}

type OrderItem {
  _id: String
  dishId: String
  restaurantId: String
  quantity: Int
  notes: String
  price: Float
  dish: Dish
}

type Order {
  _id: String
  amount: Float
  status: String
  date: String
  restaurantId: String
  customerId: String
  type: String
  addressId: String
  notes: String
  restaurant: Restaurant
  address: Address
  orderitems: [OrderItem]
}

type CartItem {
  _id: String
  restaurantId: String
  restaurant: Restaurant
  dishId: String
  dish: Dish
  quantity: Int
  notes: String
}

input OrderReq {
  orderId: String!
  addressId: String!
  notes: String
}

input CustomerReq {
  id: String!
  name: String!
  nickname: String
  about: String
  city: String
  state: String
  country: String
  contact_no: String
  medium: InpMedia
}

input RestaurantReq {
  id: String!
  name: String!
  description: String
  address: String
  city: String
  state: String
  country: String
  contact_no: String
  time_open: String
  time_close: String
  food_type: String
  restaurant_type: String
  medium: InpMedia
}

input DishReq {
  name: String
  description: String
  price: Float
  food_type: String
  category: String
  media: [InpMedia]
}

input AddressReq {
  firstLine: String
  secondLine: String
  zipcode: Int
  city: String
  state: String
  country: String
  customerId: String
}

input CartItemReq {
  dishId: String
  restaurantId: String
  quantity: Int
  notes: String
}

input InpMedia {
  url: String
  alt_text: String
}

type Query {
  restaurant(_id: String!): Restaurant
  restaurants(
    page: Int
    limit: Int
    address: String
    city: String
    restaurant_type: String
    food_type: String
    q: String
  ): RestaurantPage
  dish(_id: String!, restaurantId: String!): Dish
  dishes(restaurantId: String!, page: Int, limit: Int): DishPage
  customer(_id: String!): Customer
  favourites: [Favourite]
  addresses: [Address]
  address(_id: String!): Address
  orders(status: String, page: Int, limit: Int): OrderPage
  order(_id: String!): Order
  cartitems: [CartItem]
}

type Mutation {
  createRestaurant(restaurant: RestaurantReq): Restaurant
  createCustomer(customer: CustomerReq!): Customer
  createDish(dish: DishReq): Dish
  createAddress(address: AddressReq): Address
  createFavourite(restaurantId: String): Restaurant
  initOrder(type: String!): Order
  placeOrder(order: OrderReq!): Order
  addCartItem(cartItem: CartItemReq): CartItem
}

schema {
  query: Query
  mutation: Mutation
}
